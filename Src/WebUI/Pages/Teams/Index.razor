@using Application.Teams.Queries
@using MediatR
@page "/Teams"
@inject IMediator _mediator

<Table Items="Teams" Title="Teams List">
    <HeaderColumns>
        <th></th>
        <th>Team Name</th>
        <th class="text-center">Player Count</th>
        <th class="text-center">Cap Space</th>
    </HeaderColumns>
    <BodyColumns Context="team">
        <td>
            @{ var detailsUrl = $"/Details/{team.Id}"; }<AnchorButton Href="@detailsUrl" Title="View Team" OutlineClass="secondary" Icon="search"></AnchorButton>
            @{ var tradeUrl = $"/Trade/{team.Id}"; }<AnchorButton Href="@tradeUrl" Title="Initiate Trade" OutlineClass="primary" Icon="exchange-alt"></AnchorButton>
        </td>
        <td>
            <InlineThumbnailWithText Name="@team.TeamName" ThumbnailUrl="@team.TeamLogoUrl"></InlineThumbnailWithText>
        </td>
        <td class="text-center">@team.PlayerCount</td>
        <td class="text-center">@team.CapSpace</td>
    </BodyColumns>
</Table>

@code {
    private IReadOnlyCollection<TeamListDto> Teams { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Teams = await _mediator.Send(new GetTeamsListQuery());
    }
}